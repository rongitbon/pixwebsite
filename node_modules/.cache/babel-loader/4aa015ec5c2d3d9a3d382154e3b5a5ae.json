{"ast":null,"code":"import _objectSpread from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\src\\\\comp\\\\form\\\\form-signup.js\";\nimport React, { Component } from 'react';\nimport Input from './input/input.js';\nimport Hsecondary from \"../heading-secondary/h-secondary.js\";\nimport BtnAn from \"../button/btn-an.js\";\nimport \"./form-signup.scss\";\n\nvar FormSignup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormSignup, _Component);\n\n  function FormSignup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormSignup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormSignup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      signupForm: {\n        email: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Enter your Email'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        nickname: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter your nickname'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        password: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Enter your password'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        passwordRepeat: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Confirm password'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        acceptSignup: {\n          elementType: 'radio-v1',\n          elementConfig: {\n            name: 'acceptsignup',\n            options: [{\n              text: 'acceptsignup',\n              displayText: \"Accept\",\n              value: 'accept'\n            }, {\n              text: 'declinesignup',\n              displayText: \"Decline\",\n              value: 'decline'\n            }]\n          },\n          value: '',\n          validation: {},\n          valid: true,\n          touched: false,\n          label: true\n        }\n      }\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier) {\n      var updateSignupForm = _objectSpread({}, _this.state.signupForm);\n\n      var updateFormElement = _objectSpread({}, updateSignupForm[inputIdentifier]);\n\n      updateFormElement.value = event.target.value;\n      updateFormElement.valid = _this.checkValidity(updateFormElement.value, updateFormElement.validation);\n      updateFormElement.touched = true;\n      updateSignupForm[inputIdentifier] = updateFormElement;\n      console.log(event.target.value);\n      console.log(event.target.checked);\n\n      _this.setState({\n        signupForm: updateSignupForm\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FormSignup, [{\n    key: \"checkValidity\",\n    value: function checkValidity(value, rules) {\n      var isValid = true;\n\n      if (!rules) {\n        return true;\n      }\n\n      if (rules.required) {\n        isValid = value.trim() !== '';\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      if (rules.isEmail) {\n        isValid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(value) && isValid;\n      }\n\n      if (rules.isNumeric) {\n        isValid = /^\\d+$/.test(value) && isValid;\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"form-signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-signup-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Hsecondary, {\n        text: \"signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), Object.keys(this.state.signupForm).map(function (key) {\n        return React.createElement(Input, {\n          key: key,\n          elementType: _this2.state.signupForm[key].elementType,\n          elementConfig: _this2.state.signupForm[key].elementConfig,\n          value: _this2.state.signupForm[key].value,\n          invalid: !_this2.state.signupForm[key].valid,\n          shouldValidate: _this2.state.signupForm[key].validation,\n          touched: _this2.state.signupForm[key].touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, key);\n          },\n          label: _this2.state.signupForm[key].label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        className: \"form-signup-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(BtnAn, {\n        color: \"blue\",\n        text: \"sign up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FormSignup;\n}(Component);\n\n;\nexport default FormSignup;","map":{"version":3,"sources":["D:\\udemy\\project\\pixwebsite\\src\\comp\\form\\form-signup.js"],"names":["React","Component","Input","Hsecondary","BtnAn","FormSignup","state","signupForm","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","label","nickname","password","passwordRepeat","acceptSignup","name","options","text","displayText","inputChangedHandler","event","inputIdentifier","updateSignupForm","updateFormElement","target","checkValidity","console","log","checked","setState","rules","isValid","trim","minLength","length","maxLength","test","isNumeric","Object","keys","map","key"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,oBAAP;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE;AACHC,UAAAA,WAAW,EAAE,UADV;AAEHC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,OADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFZ;AAMHC,UAAAA,KAAK,EAAE,EANJ;AAOHC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERC,YAAAA,OAAO,EAAE;AAFD,WAPT;AAWHC,UAAAA,KAAK,EAAE,KAXJ;AAYHC,UAAAA,OAAO,EAAE,KAZN;AAaHC,UAAAA,KAAK,EAAE;AAbJ,SADC;AAgBRC,QAAAA,QAAQ,EAAE;AACNX,UAAAA,WAAW,EAAE,UADP;AAENC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,MADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFT;AAMNC,UAAAA,KAAK,EAAE,EAND;AAONC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WAPN;AAUNE,UAAAA,KAAK,EAAE,KAVD;AAWNC,UAAAA,OAAO,EAAE,KAXH;AAYNC,UAAAA,KAAK,EAAE;AAZD,SAhBF;AA8BRE,QAAAA,QAAQ,EAAE;AACNZ,UAAAA,WAAW,EAAE,UADP;AAENC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,UADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFT;AAMNC,UAAAA,KAAK,EAAE,EAND;AAONC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WAPN;AAUNE,UAAAA,KAAK,EAAE,KAVD;AAWNC,UAAAA,OAAO,EAAE,KAXH;AAYNC,UAAAA,KAAK,EAAE;AAZD,SA9BF;AA4CRG,QAAAA,cAAc,EAAE;AACZb,UAAAA,WAAW,EAAE,UADD;AAEZC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,UADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFH;AAMZC,UAAAA,KAAK,EAAE,EANK;AAOZC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WAPA;AAUZE,UAAAA,KAAK,EAAE,KAVK;AAWZC,UAAAA,OAAO,EAAE,KAXG;AAYZC,UAAAA,KAAK,EAAE;AAZK,SA5CR;AA0DRI,QAAAA,YAAY,EAAE;AACVd,UAAAA,WAAW,EAAE,UADH;AAEVC,UAAAA,aAAa,EAAE;AACXc,YAAAA,IAAI,EAAE,cADK;AAEXC,YAAAA,OAAO,EAAE,CACL;AAACC,cAAAA,IAAI,EAAE,cAAP;AAAuBC,cAAAA,WAAW,EAAE,QAApC;AAA8Cd,cAAAA,KAAK,EAAC;AAApD,aADK,EAEL;AAACa,cAAAA,IAAI,EAAE,eAAP;AAAwBC,cAAAA,WAAW,EAAE,SAArC;AAAgDd,cAAAA,KAAK,EAAC;AAAtD,aAFK;AAFE,WAFL;AASVA,UAAAA,KAAK,EAAE,EATG;AAUVC,UAAAA,UAAU,EAAE,EAVF;AAWVG,UAAAA,KAAK,EAAE,IAXG;AAYVC,UAAAA,OAAO,EAAE,KAZC;AAaVC,UAAAA,KAAK,EAAE;AAbG;AA1DN;AADR,K;;UA0GRS,mB,GAAsB,UAACC,KAAD,EAAQC,eAAR,EAA4B;AAC9C,UAAMC,gBAAgB,qBACf,MAAKzB,KAAL,CAAWC,UADI,CAAtB;;AAGA,UAAMyB,iBAAiB,qBAChBD,gBAAgB,CAACD,eAAD,CADA,CAAvB;;AAGAE,MAAAA,iBAAiB,CAACnB,KAAlB,GAA0BgB,KAAK,CAACI,MAAN,CAAapB,KAAvC;AACAmB,MAAAA,iBAAiB,CAACf,KAAlB,GAA0B,MAAKiB,aAAL,CAAmBF,iBAAiB,CAACnB,KAArC,EAA4CmB,iBAAiB,CAAClB,UAA9D,CAA1B;AACAkB,MAAAA,iBAAiB,CAACd,OAAlB,GAA4B,IAA5B;AACAa,MAAAA,gBAAgB,CAACD,eAAD,CAAhB,GAAoCE,iBAApC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACI,MAAN,CAAapB,KAAzB;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACI,MAAN,CAAaI,OAAzB;;AAEA,YAAKC,QAAL,CAAc;AAAC/B,QAAAA,UAAU,EAAEwB;AAAb,OAAd;AACH,K;;;;;;;kCA5CalB,K,EAAO0B,K,EAAO;AACxB,UAAIC,OAAO,GAAG,IAAd;;AACA,UAAI,CAACD,KAAL,EAAY;AACR,eAAO,IAAP;AACH;;AAED,UAAIA,KAAK,CAACxB,QAAV,EAAoB;AAChByB,QAAAA,OAAO,GAAG3B,KAAK,CAAC4B,IAAN,OAAiB,EAA3B;AACH;;AAED,UAAIF,KAAK,CAACG,SAAV,EAAqB;AACjBF,QAAAA,OAAO,GAAG3B,KAAK,CAAC8B,MAAN,IAAgBJ,KAAK,CAACG,SAAtB,IAAmCF,OAA7C;AACH;;AAED,UAAID,KAAK,CAACK,SAAV,EAAqB;AACjBJ,QAAAA,OAAO,GAAG3B,KAAK,CAAC8B,MAAN,IAAgBJ,KAAK,CAACK,SAAtB,IAAmCJ,OAA7C;AACH;;AAED,UAAID,KAAK,CAACvB,OAAV,EAAmB;AACfwB,QAAAA,OAAO,GAAG,wIAAwIK,IAAxI,CAA6IhC,KAA7I,KAAuJ2B,OAAjK;AACH;;AAED,UAAID,KAAK,CAACO,SAAV,EAAqB;AACjBN,QAAAA,OAAO,GAAG,QAAQK,IAAR,CAAahC,KAAb,KAAuB2B,OAAjC;AACH;;AAED,aAAOA,OAAP;AACH;;;6BAoBS;AAAA;;AACN,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAIKO,MAAM,CAACC,IAAP,CAAY,KAAK1C,KAAL,CAAWC,UAAvB,EAAmC0C,GAAnC,CAAuC,UAAAC,GAAG;AAAA,eACvC,oBAAC,KAAD;AACI,UAAA,GAAG,EAAEA,GADT;AAEI,UAAA,WAAW,EAAE,MAAI,CAAC5C,KAAL,CAAWC,UAAX,CAAsB2C,GAAtB,EAA2BzC,WAF5C;AAGI,UAAA,aAAa,EAAE,MAAI,CAACH,KAAL,CAAWC,UAAX,CAAsB2C,GAAtB,EAA2BxC,aAH9C;AAII,UAAA,KAAK,EAAE,MAAI,CAACJ,KAAL,CAAWC,UAAX,CAAsB2C,GAAtB,EAA2BrC,KAJtC;AAKI,UAAA,OAAO,EAAE,CAAC,MAAI,CAACP,KAAL,CAAWC,UAAX,CAAsB2C,GAAtB,EAA2BjC,KALzC;AAMI,UAAA,cAAc,EAAE,MAAI,CAACX,KAAL,CAAWC,UAAX,CAAsB2C,GAAtB,EAA2BpC,UAN/C;AAOI,UAAA,OAAO,EAAE,MAAI,CAACR,KAAL,CAAWC,UAAX,CAAsB2C,GAAtB,EAA2BhC,OAPxC;AAQI,UAAA,OAAO,EAAE,iBAACW,KAAD;AAAA,mBAAW,MAAI,CAACD,mBAAL,CAAyBC,KAAzB,EAAgCqB,GAAhC,CAAX;AAAA,WARb;AASI,UAAA,KAAK,EAAE,MAAI,CAAC5C,KAAL,CAAWC,UAAX,CAAsB2C,GAAtB,EAA2B/B,KATtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuC;AAAA,OAA1C,CAJL,EAiBI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,MAAd;AAAsB,QAAA,IAAI,EAAE,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjC,CAjBJ,CADJ;AAqBH;;;;EAnJoBlB,S;;AAoJxB;AAED,eAAeI,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Input from './input/input.js';\r\nimport Hsecondary from \"../heading-secondary/h-secondary.js\";\r\nimport BtnAn from \"../button/btn-an.js\";\r\nimport \"./form-signup.scss\";\r\n\r\nclass FormSignup extends Component {\r\n    state = {\r\n        signupForm: {\r\n            email: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Enter your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            nickname: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter your nickname'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            password: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Enter your password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            passwordRepeat: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Confirm password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            acceptSignup: {\r\n                elementType: 'radio-v1',\r\n                elementConfig: {\r\n                    name: 'acceptsignup',\r\n                    options: [\r\n                        {text: 'acceptsignup', displayText: \"Accept\", value:'accept'},\r\n                        {text: 'declinesignup', displayText: \"Decline\", value:'decline'}\r\n                    ]\r\n                },\r\n                value: '',\r\n                validation: {},\r\n                valid: true,\r\n                touched: false,\r\n                label: true\r\n            }\r\n        }\r\n    };\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '';\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            isValid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            isValid = /^\\d+$/.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updateSignupForm = {\r\n            ...this.state.signupForm\r\n        };\r\n        const updateFormElement = {\r\n            ...updateSignupForm[inputIdentifier]\r\n        };\r\n        updateFormElement.value = event.target.value;\r\n        updateFormElement.valid = this.checkValidity(updateFormElement.value, updateFormElement.validation);\r\n        updateFormElement.touched = true;\r\n        updateSignupForm[inputIdentifier] = updateFormElement;\r\n        console.log(event.target.value);\r\n        console.log(event.target.checked);\r\n\r\n        this.setState({signupForm: updateSignupForm});\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"form-signup\">\r\n                <div className=\"form-signup-h\">\r\n                    <Hsecondary text=\"signup\"/>\r\n                </div>\r\n                {Object.keys(this.state.signupForm).map(key => (\r\n                    <Input\r\n                        key={key}\r\n                        elementType={this.state.signupForm[key].elementType}\r\n                        elementConfig={this.state.signupForm[key].elementConfig}\r\n                        value={this.state.signupForm[key].value}\r\n                        invalid={!this.state.signupForm[key].valid}\r\n                        shouldValidate={this.state.signupForm[key].validation}\r\n                        touched={this.state.signupForm[key].touched}\r\n                        changed={(event) => this.inputChangedHandler(event, key)}\r\n                        label={this.state.signupForm[key].label}\r\n                         />\r\n                ))}\r\n                <div className=\"form-signup-btn\"><BtnAn color={\"blue\"} text={\"sign up\"} /></div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default FormSignup;"]},"metadata":{},"sourceType":"module"}