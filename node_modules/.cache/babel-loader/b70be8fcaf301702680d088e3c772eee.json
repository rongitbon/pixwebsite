{"ast":null,"code":"import _objectSpread from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\src\\\\comp\\\\float-pages\\\\edit-profile-page\\\\edit-profile-page.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../../form/input/input.js';\nimport Hsecondary from \"../../heading-secondary/h-secondary.js\";\nimport BtnAn from \"../../button/btn-an.js\";\nimport BtnCancel from \"../../button/btn-cancel.js\";\nimport * as action from '../../../store/actions/index.js';\nimport \"./edit-profile-page.scss\";\n\nvar EditProfilepage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditProfilepage, _Component);\n\n  function EditProfilepage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditProfilepage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditProfilepage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editProfileForm: {\n        imgpath: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter image'\n          },\n          value: '',\n          validation: {\n            required: false\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        nickname: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter nickname'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        email: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter your email'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        profiledescription: {\n          elementType: 'textarea-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter description'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        }\n      }\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier) {\n      var updateEditProfileForm = _objectSpread({}, _this.state.editProfileForm);\n\n      var updateFormElement = _objectSpread({}, updateEditProfileForm[inputIdentifier]);\n\n      updateFormElement.value = event.target.value;\n      updateFormElement.valid = _this.checkValidity(updateFormElement.value, updateFormElement.validation);\n      updateFormElement.touched = true;\n      updateEditProfileForm[inputIdentifier] = updateFormElement;\n      console.log(event.target.value);\n      console.log(event.target.checked);\n\n      _this.setState({\n        editProfileForm: updateEditProfileForm\n      });\n    };\n\n    _this.formChangedHandler = function (event) {\n      console.log(event.target.value);\n\n      _this.setState({\n        formfront: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditProfilepage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var updateEditProfileForm = _objectSpread({}, this.state.editProfileForm);\n\n      updateEditProfileForm.imgpath.value = this.props.user.image ? this.props.user.image : \"\";\n      updateEditProfileForm.imgpath.valid = this.checkValidity(updateEditProfileForm.imgpath.value, updateEditProfileForm.imgpath.validation);\n      updateEditProfileForm.profiledescription.value = this.props.user.description ? this.props.user.description : \"\";\n      updateEditProfileForm.profiledescription.valid = this.checkValidity(updateEditProfileForm.profiledescription.value, updateEditProfileForm.profiledescription.validation);\n      updateEditProfileForm.email.value = this.props.user.email;\n      updateEditProfileForm.email.valid = this.checkValidity(updateEditProfileForm.email.value, updateEditProfileForm.email.validation);\n      updateEditProfileForm.nickname.value = this.props.user.nickname;\n      updateEditProfileForm.nickname.valid = this.checkValidity(updateEditProfileForm.nickname.value, updateEditProfileForm.nickname.validation);\n      this.setState({\n        editProfileForm: updateEditProfileForm\n      });\n    }\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity(value, rules) {\n      var isValid = true;\n\n      if (!rules) {\n        return true;\n      }\n\n      if (rules.required) {\n        isValid = value.trim() !== '';\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      if (rules.isEmail) {\n        isValid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(value) && isValid;\n      }\n\n      if (rules.isNumeric) {\n        isValid = /^\\d+$/.test(value) && isValid;\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var sendRequestHandler = function sendRequestHandler() {\n        if (_this2.state.editProfileForm.imgpath.valid && _this2.state.editProfileForm.itemselection.valid && _this2.state.editProfileForm.itemname.valid && _this2.state.editProfileForm.itemprice.valid && _this2.props.user.id) {\n          console.log(\"connect\");\n\n          _this2.props.addCard(_this2);\n        } else {\n          console.log(\"error\");\n        }\n      };\n\n      return React.createElement(\"div\", {\n        className: \"editProfilePage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"editProfilePage-cancel\",\n        onClick: this.props.cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(BtnCancel, {\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"editProfilePage-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Hsecondary, {\n        text: \"update item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          padding: \"5rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, Object.keys(this.state.editProfileForm).map(function (key) {\n        return React.createElement(Input, {\n          key: key,\n          elementType: _this2.state.editProfileForm[key].elementType,\n          elementConfig: _this2.state.editProfileForm[key].elementConfig,\n          value: _this2.state.editProfileForm[key].value,\n          invalid: !_this2.state.editProfileForm[key].valid,\n          shouldValidate: _this2.state.editProfileForm[key].validation,\n          touched: _this2.state.editProfileForm[key].touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, key);\n          },\n          label: _this2.state.editProfileForm[key].label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"editProfilePage-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(BtnAn, {\n        color: \"blue\",\n        text: \"update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditProfilepage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.account.user,\n    loading: state.form.loading.editProfile\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addaction: function addaction(comp) {\n      return dispatch(action.addCard(comp.state.editItemForm.imgpath.value, comp.state.editItemForm.itemselection.value, comp.state.editItemForm.itemname.value, comp.state.editItemForm.itemdescription.value, comp.state.editItemForm.itemprice.value, comp.props.user.id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfilepage);","map":{"version":3,"sources":["D:\\udemy\\project\\pixwebsite\\src\\comp\\float-pages\\edit-profile-page\\edit-profile-page.js"],"names":["React","Component","connect","Input","Hsecondary","BtnAn","BtnCancel","action","EditProfilepage","state","editProfileForm","imgpath","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","label","nickname","email","isEmail","profiledescription","inputChangedHandler","event","inputIdentifier","updateEditProfileForm","updateFormElement","target","checkValidity","console","log","checked","setState","formChangedHandler","formfront","props","user","image","description","rules","isValid","trim","minLength","length","maxLength","test","isNumeric","sendRequestHandler","itemselection","itemname","itemprice","id","addCard","cancel","padding","Object","keys","map","key","mapStateToProps","account","loading","form","editProfile","mapDispatchToProps","dispatch","addaction","comp","editItemForm","itemdescription"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Input from '../../form/input/input.js';\r\nimport Hsecondary from \"../../heading-secondary/h-secondary.js\";\r\nimport BtnAn from \"../../button/btn-an.js\";\r\nimport BtnCancel from \"../../button/btn-cancel.js\";\r\nimport * as action from '../../../store/actions/index.js';\r\nimport \"./edit-profile-page.scss\";\r\n\r\n\r\nclass EditProfilepage extends Component {\r\n    state = {\r\n        editProfileForm: {\r\n            imgpath: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter image'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            nickname: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter nickname'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            email: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter your email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            profiledescription: {\r\n                elementType: 'textarea-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter description'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillMount () {\r\n        const updateEditProfileForm = {\r\n            ...this.state.editProfileForm\r\n        };\r\n\r\n        updateEditProfileForm.imgpath.value = this.props.user.image?this.props.user.image:\"\";\r\n        updateEditProfileForm.imgpath.valid = \r\n            this.checkValidity(updateEditProfileForm.imgpath.value, updateEditProfileForm.imgpath.validation);\r\n\r\n        updateEditProfileForm.profiledescription.value = this.props.user.description?this.props.user.description:\"\";\r\n        updateEditProfileForm.profiledescription.valid = \r\n            this.checkValidity(updateEditProfileForm.profiledescription.value, updateEditProfileForm.profiledescription.validation);\r\n\r\n        updateEditProfileForm.email.value = this.props.user.email;\r\n        updateEditProfileForm.email.valid = \r\n            this.checkValidity(updateEditProfileForm.email.value, updateEditProfileForm.email.validation);\r\n\r\n        updateEditProfileForm.nickname.value = this.props.user.nickname;\r\n        updateEditProfileForm.nickname.valid = \r\n            this.checkValidity(updateEditProfileForm.nickname.value, updateEditProfileForm.nickname.validation);\r\n\r\n        this.setState({editProfileForm: updateEditProfileForm});\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '';\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            isValid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            isValid = /^\\d+$/.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updateEditProfileForm = {\r\n            ...this.state.editProfileForm\r\n        };\r\n        const updateFormElement = {\r\n            ...updateEditProfileForm[inputIdentifier]\r\n        };\r\n        updateFormElement.value = event.target.value;\r\n        updateFormElement.valid = this.checkValidity(updateFormElement.value, updateFormElement.validation);\r\n        updateFormElement.touched = true;\r\n        updateEditProfileForm[inputIdentifier] = updateFormElement;\r\n        console.log(event.target.value);\r\n        console.log(event.target.checked);\r\n\r\n        this.setState({editProfileForm: updateEditProfileForm});\r\n    }\r\n\r\n    formChangedHandler = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({formfront: event.target.value});\r\n    }\r\n\r\n    render () {\r\n        const sendRequestHandler = () => {\r\n            if (this.state.editProfileForm.imgpath.valid && \r\n                this.state.editProfileForm.itemselection.valid &&\r\n                this.state.editProfileForm.itemname.valid &&\r\n                this.state.editProfileForm.itemprice.valid &&\r\n                this.props.user.id ){\r\n                    console.log(\"connect\");\r\n                    this.props.addCard(this);\r\n            }\r\n            else {\r\n                console.log(\"error\");\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"editProfilePage\">\r\n                <div className=\"editProfilePage-cancel\" onClick={this.props.cancel}><BtnCancel color=\"blue\" /></div>\r\n                <div className=\"editProfilePage-h\"><Hsecondary text={\"update item\"} /></div>\r\n                <div style={{padding: \"5rem\"}}>\r\n                    {Object.keys(this.state.editProfileForm).map(key => (\r\n                    <Input\r\n                        key={key}\r\n                        elementType={this.state.editProfileForm[key].elementType}\r\n                        elementConfig={this.state.editProfileForm[key].elementConfig}\r\n                        value={this.state.editProfileForm[key].value}\r\n                        invalid={!this.state.editProfileForm[key].valid}\r\n                        shouldValidate={this.state.editProfileForm[key].validation}\r\n                        touched={this.state.editProfileForm[key].touched}\r\n                        changed={(event) => this.inputChangedHandler(event, key)}\r\n                        label={this.state.editProfileForm[key].label}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div className=\"editProfilePage-btn\"><BtnAn color={\"blue\"} text={\"update\"} /></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.account.user,\r\n        loading: state.form.loading.editProfile\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addaction: (comp) => dispatch( action.addCard(\r\n            comp.state.editItemForm.imgpath.value, \r\n            comp.state.editItemForm.itemselection.value,\r\n            comp.state.editItemForm.itemname.value,\r\n            comp.state.editItemForm.itemdescription.value,\r\n            comp.state.editItemForm.itemprice.value,\r\n            comp.props.user.id\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfilepage);"]},"metadata":{},"sourceType":"module"}