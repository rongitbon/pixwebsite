{"ast":null,"code":"import * as actionTypes from './actionType.js';\nimport * as form from './form.js';\nimport axios from 'axios';\nexport var setUserInfo = function setUserInfo(userInfo) {\n  return {\n    type: actionTypes.SET_USER_INFO,\n    userInfo: userInfo\n  };\n};\nexport var signupFailed = function signupFailed(error) {\n  return {\n    type: actionTypes.SIGNUP_FAILED,\n    error: error\n  };\n};\nexport var login = function login(email, password) {\n  return function (dispatch) {\n    dispatch(form.startLoading('login'));\n    axios.post('http://localhost:3001/login', {\n      email: email,\n      password: password\n    }).then(function (user) {\n      dispatch(setUserInfo(user.data));\n      dispatch({\n        type: actionTypes.CLOSE_LOGIN_FORM\n      });\n      dispatch(form.stopLoading('login'));\n    }).catch(function (error_msg) {\n      dispatch(form.compFailed(\"login\", error_msg));\n      dispatch(form.stopLoading('login'));\n    });\n  };\n};\nexport var signup = function signup(email, nickname, password) {\n  return function (dispatch) {\n    dispatch(form.startLoading('signup'));\n    axios.post('http://localhost:3001/signup', {\n      email: email,\n      nickname: nickname,\n      password: password\n    }).then(function (user) {\n      dispatch(setUserInfo(user.data));\n      dispatch({\n        type: actionTypes.CLOSE_LOGIN_FORM\n      });\n      dispatch(form.stopLoading('signup'));\n    }).catch(function (error_msg) {\n      dispatch(form.compFailed(\"signup\", error_msg));\n      dispatch(form.stopLoading('signup'));\n    });\n  };\n};\nexport var signout = function signout() {\n  return {\n    type: actionTypes.SIGNOUT\n  };\n};","map":{"version":3,"sources":["D:\\udemy\\project\\pixwebsite\\src\\store\\actions\\account.js"],"names":["actionTypes","form","axios","setUserInfo","userInfo","type","SET_USER_INFO","signupFailed","error","SIGNUP_FAILED","login","email","password","dispatch","startLoading","post","then","user","data","CLOSE_LOGIN_FORM","stopLoading","catch","error_msg","compFailed","signup","nickname","signout","SIGNOUT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,iBAA7B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAEL,WAAW,CAACM,aADf;AAEHF,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CALM;AAQP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AACnC,SAAO;AACHH,IAAAA,IAAI,EAAEL,WAAW,CAACS,aADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAEtC,SAAO,UAACC,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACZ,IAAI,CAACa,YAAL,CAAkB,OAAlB,CAAD,CAAR;AACAZ,IAAAA,KAAK,CAACa,IAAN,CAAW,6BAAX,EAA0C;AACtCJ,MAAAA,KAAK,EAAEA,KAD+B;AAEtCC,MAAAA,QAAQ,EAAEA;AAF4B,KAA1C,EAICI,IAJD,CAIM,UAAAC,IAAI,EAAI;AACVJ,MAAAA,QAAQ,CAACV,WAAW,CAACc,IAAI,CAACC,IAAN,CAAZ,CAAR;AACAL,MAAAA,QAAQ,CAAC;AAACR,QAAAA,IAAI,EAAEL,WAAW,CAACmB;AAAnB,OAAD,CAAR;AACAN,MAAAA,QAAQ,CAACZ,IAAI,CAACmB,WAAL,CAAiB,OAAjB,CAAD,CAAR;AACH,KARD,EASCC,KATD,CASO,UAAAC,SAAS,EAAI;AAChBT,MAAAA,QAAQ,CAACZ,IAAI,CAACsB,UAAL,CAAgB,OAAhB,EAAyBD,SAAzB,CAAD,CAAR;AACAT,MAAAA,QAAQ,CAACZ,IAAI,CAACmB,WAAL,CAAiB,OAAjB,CAAD,CAAR;AACH,KAZD;AAaH,GAfD;AAgBH,CAlBM;AAoBP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACb,KAAD,EAAQc,QAAR,EAAkBb,QAAlB,EAA+B;AACjD,SAAO,UAACC,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACZ,IAAI,CAACa,YAAL,CAAkB,QAAlB,CAAD,CAAR;AACAZ,IAAAA,KAAK,CAACa,IAAN,CAAW,8BAAX,EAA2C;AACvCJ,MAAAA,KAAK,EAAEA,KADgC;AAEvCc,MAAAA,QAAQ,EAAEA,QAF6B;AAGvCb,MAAAA,QAAQ,EAAEA;AAH6B,KAA3C,EAKCI,IALD,CAKM,UAAAC,IAAI,EAAI;AACVJ,MAAAA,QAAQ,CAACV,WAAW,CAACc,IAAI,CAACC,IAAN,CAAZ,CAAR;AACAL,MAAAA,QAAQ,CAAC;AAACR,QAAAA,IAAI,EAAEL,WAAW,CAACmB;AAAnB,OAAD,CAAR;AACAN,MAAAA,QAAQ,CAACZ,IAAI,CAACmB,WAAL,CAAiB,QAAjB,CAAD,CAAR;AACH,KATD,EAUCC,KAVD,CAUO,UAAAC,SAAS,EAAI;AAChBT,MAAAA,QAAQ,CAACZ,IAAI,CAACsB,UAAL,CAAgB,QAAhB,EAA0BD,SAA1B,CAAD,CAAR;AACAT,MAAAA,QAAQ,CAACZ,IAAI,CAACmB,WAAL,CAAiB,QAAjB,CAAD,CAAR;AACH,KAbD;AAcH,GAhBD;AAiBH,CAlBM;AAoBP,OAAO,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,SAAO;AACHrB,IAAAA,IAAI,EAAEL,WAAW,CAAC2B;AADf,GAAP;AAGH,CAJM","sourcesContent":["import * as actionTypes from './actionType.js';\r\nimport * as form from './form.js';\r\nimport axios from 'axios';\r\n\r\nexport const setUserInfo = (userInfo) => {\r\n    return {\r\n        type: actionTypes.SET_USER_INFO,\r\n        userInfo: userInfo\r\n    };\r\n};\r\n\r\n\r\nexport const signupFailed = (error) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_FAILED,\r\n        error: error,\r\n    };\r\n};\r\n\r\nexport const login = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(form.startLoading('login'));\r\n        axios.post('http://localhost:3001/login', {\r\n            email: email,\r\n            password: password\r\n        })\r\n        .then(user => {\r\n            dispatch(setUserInfo(user.data));\r\n            dispatch({type: actionTypes.CLOSE_LOGIN_FORM});\r\n            dispatch(form.stopLoading('login'));\r\n        })\r\n        .catch(error_msg => {\r\n            dispatch(form.compFailed(\"login\", error_msg));\r\n            dispatch(form.stopLoading('login'));\r\n        });\r\n    };\r\n};\r\n\r\nexport const signup = (email, nickname, password) => {\r\n    return (dispatch) => {\r\n        dispatch(form.startLoading('signup'));\r\n        axios.post('http://localhost:3001/signup', {\r\n            email: email,\r\n            nickname: nickname,\r\n            password: password\r\n        })\r\n        .then(user => {\r\n            dispatch(setUserInfo(user.data));\r\n            dispatch({type: actionTypes.CLOSE_LOGIN_FORM});\r\n            dispatch(form.stopLoading('signup'));\r\n        })\r\n        .catch(error_msg => {\r\n            dispatch(form.compFailed(\"signup\", error_msg));\r\n            dispatch(form.stopLoading('signup'));\r\n        });\r\n    };\r\n}\r\n\r\nexport const signout = () => {\r\n    return {\r\n        type: actionTypes.SIGNOUT\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}