{"ast":null,"code":"import _objectSpread from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\src\\\\comp\\\\float-pages\\\\edit-item-page\\\\edit-item-page.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../../form/input/input.js';\nimport Hsecondary from \"../../heading-secondary/h-secondary.js\";\nimport BtnAn from \"../../button/btn-an.js\";\nimport BtnCancel from \"../../button/btn-cancel.js\";\nimport Loader from '../../loader/loader.js';\nimport * as card from '../../../store/actions/index.js';\nimport \"./edit-item-page.scss\";\n\nvar Edititempage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Edititempage, _Component);\n\n  function Edititempage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Edititempage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Edititempage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editItemForm: {\n        imgpath: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter item path'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        itemselection: {\n          elementType: 'select-v1',\n          elementConfig: {\n            placeholder: ' , ',\n            options: [{\n              displayText: \"RobotV1\",\n              value: 'robotV1'\n            }, {\n              displayText: \"Monster\",\n              value: 'monster'\n            }, {\n              displayText: \"RobotV2\",\n              value: 'robotV2'\n            }, {\n              displayText: \"Kitten\",\n              value: 'kitten'\n            }]\n          },\n          value: 'robotV1',\n          validation: {},\n          valid: true,\n          touched: false,\n          label: true\n        },\n        itemname: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter item name'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        itemprice: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter item price'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isNumeric: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        itemdescription: {\n          elementType: 'textarea-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter item description'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        }\n      },\n      characterPath: {\n        robotV1: \"set_set1/\",\n        monster: \"set_set2/\",\n        robotV2: \"set_set3/\",\n        kitten: \"set_set4/\"\n      }\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier) {\n      var updateEditItemForm = _objectSpread({}, _this.state.editItemForm);\n\n      var updateFormElement = _objectSpread({}, updateEditItemForm[inputIdentifier]);\n\n      updateFormElement.value = event.target.value;\n      updateFormElement.valid = _this.checkValidity(updateFormElement.value, updateFormElement.validation);\n      updateFormElement.touched = true;\n      updateEditItemForm[inputIdentifier] = updateFormElement;\n      console.log(event.target.value);\n      console.log(event.target.checked);\n\n      _this.setState({\n        editItemForm: updateEditItemForm\n      });\n    };\n\n    _this.formChangedHandler = function (event) {\n      console.log(event.target.value);\n\n      _this.setState({\n        formfront: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Edititempage, [{\n    key: \"checkValidity\",\n    value: function checkValidity(value, rules) {\n      var isValid = true;\n\n      if (!rules) {\n        return true;\n      }\n\n      if (rules.required) {\n        isValid = value.trim() !== '';\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      if (rules.isEmail) {\n        isValid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(value) && isValid;\n      }\n\n      if (rules.isNumeric) {\n        isValid = /^\\d+$/.test(value) && isValid;\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var sendRequestHandler = function sendRequestHandler() {\n        if (_this2.state.editItemForm.imgpath.valid && _this2.state.editItemForm.itemselection.valid && _this2.state.editItemForm.itemname.valid && _this2.state.editItemForm.itemprice.valid && _this2.props.user.id) {\n          console.log(\"connect\");\n\n          _this2.props.addCard(_this2);\n        } else {\n          console.log(\"error\");\n        }\n      };\n\n      return React.createElement(\"div\", {\n        className: \"editItemPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"editItemPage-cancel\",\n        onClick: this.props.cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(BtnCancel, {\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(Loader, {\n        load: this.props.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"editItemPage-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Hsecondary, {\n        text: \"update item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-1-of-4\",\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"card-side-front-img\",\n        alt: \"robots\",\n        src: \"https://robohash.org/\".concat(this.state.characterPath[this.state.editItemForm.itemselection.value] + this.state.editItemForm.imgpath.value, \"?50x50\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-1-of-2\",\n        style: {\n          paddingTop: \"1rem\",\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, Object.keys(this.state.editItemForm).map(function (key) {\n        return React.createElement(Input, {\n          key: key,\n          elementType: _this2.state.editItemForm[key].elementType,\n          elementConfig: _this2.state.editItemForm[key].elementConfig,\n          value: _this2.state.editItemForm[key].value,\n          invalid: !_this2.state.editItemForm[key].valid,\n          shouldValidate: _this2.state.editItemForm[key].validation,\n          touched: _this2.state.editItemForm[key].touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, key);\n          },\n          label: _this2.state.editItemForm[key].label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        });\n      }))), React.createElement(\"div\", {\n        className: \"editItemPage-btn\",\n        onClick: function onClick() {\n          return sendRequestHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(BtnAn, {\n        color: \"blue\",\n        text: \"update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Edititempage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.account.user,\n    loading: state.form.loading.editItem\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addCard: function addCard(comp) {\n      return dispatch(card.addCard(comp.state.editItemForm.imgpath.value, comp.state.editItemForm.itemselection.value, comp.state.editItemForm.itemname.value, comp.state.editItemForm.itemdescription.value, comp.state.editItemForm.itemprice.value, comp.props.user.id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edititempage);","map":{"version":3,"sources":["D:\\udemy\\project\\pixwebsite\\src\\comp\\float-pages\\edit-item-page\\edit-item-page.js"],"names":["React","Component","connect","Input","Hsecondary","BtnAn","BtnCancel","Loader","card","Edititempage","state","editItemForm","imgpath","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","label","itemselection","options","displayText","itemname","itemprice","isNumeric","itemdescription","characterPath","robotV1","monster","robotV2","kitten","inputChangedHandler","event","inputIdentifier","updateEditItemForm","updateFormElement","target","checkValidity","console","log","checked","setState","formChangedHandler","formfront","rules","isValid","trim","minLength","length","maxLength","isEmail","test","sendRequestHandler","props","user","id","addCard","cancel","loading","textAlign","paddingTop","Object","keys","map","key","mapStateToProps","account","form","editItem","mapDispatchToProps","dispatch","comp"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,iCAAtB;AACA,OAAO,uBAAP;;IAGMC,Y;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,YAAY,EAAE;AACVC,QAAAA,OAAO,EAAE;AACLC,UAAAA,WAAW,EAAE,UADR;AAELC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,MADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFV;AAMLC,UAAAA,KAAK,EAAE,EANF;AAOLC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WAPP;AAULC,UAAAA,KAAK,EAAE,KAVF;AAWLC,UAAAA,OAAO,EAAE,KAXJ;AAYLC,UAAAA,KAAK,EAAE;AAZF,SADC;AAgBVC,QAAAA,aAAa,EAAE;AACXV,UAAAA,WAAW,EAAE,WADF;AAEXC,UAAAA,aAAa,EAAE;AACXE,YAAAA,WAAW,EAAE,KADF;AAEXQ,YAAAA,OAAO,EAAE,CACL;AAACC,cAAAA,WAAW,EAAE,SAAd;AAAyBR,cAAAA,KAAK,EAAC;AAA/B,aADK,EAEL;AAACQ,cAAAA,WAAW,EAAE,SAAd;AAAyBR,cAAAA,KAAK,EAAC;AAA/B,aAFK,EAGL;AAACQ,cAAAA,WAAW,EAAE,SAAd;AAAyBR,cAAAA,KAAK,EAAC;AAA/B,aAHK,EAIL;AAACQ,cAAAA,WAAW,EAAE,QAAd;AAAwBR,cAAAA,KAAK,EAAC;AAA9B,aAJK;AAFE,WAFJ;AAWXA,UAAAA,KAAK,EAAE,SAXI;AAYXC,UAAAA,UAAU,EAAE,EAZD;AAaXE,UAAAA,KAAK,EAAE,IAbI;AAcXC,UAAAA,OAAO,EAAE,KAdE;AAeXC,UAAAA,KAAK,EAAE;AAfI,SAhBL;AAiCVI,QAAAA,QAAQ,EAAE;AACNb,UAAAA,WAAW,EAAE,UADP;AAENC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,MADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFT;AAMNC,UAAAA,KAAK,EAAE,EAND;AAONC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WAPN;AAUNC,UAAAA,KAAK,EAAE,KAVD;AAWNC,UAAAA,OAAO,EAAE,KAXH;AAYNC,UAAAA,KAAK,EAAE;AAZD,SAjCA;AA+CVK,QAAAA,SAAS,EAAE;AACPd,UAAAA,WAAW,EAAE,UADN;AAEPC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,MADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFR;AAMPC,UAAAA,KAAK,EAAE,EANA;AAOPC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERS,YAAAA,SAAS,EAAE;AAFH,WAPL;AAWPR,UAAAA,KAAK,EAAE,KAXA;AAYPC,UAAAA,OAAO,EAAE,KAZF;AAaPC,UAAAA,KAAK,EAAE;AAbA,SA/CD;AA8DVO,QAAAA,eAAe,EAAE;AACbhB,UAAAA,WAAW,EAAE,aADA;AAEbC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,MADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFF;AAMbC,UAAAA,KAAK,EAAE,EANM;AAObC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WAPC;AAUbC,UAAAA,KAAK,EAAE,KAVM;AAWbC,UAAAA,OAAO,EAAE,KAXI;AAYbC,UAAAA,KAAK,EAAE;AAZM;AA9DP,OADV;AA8EJQ,MAAAA,aAAa,EAAE;AACXC,QAAAA,OAAO,EAAE,WADE;AAEXC,QAAAA,OAAO,EAAE,WAFE;AAGXC,QAAAA,OAAO,EAAE,WAHE;AAIXC,QAAAA,MAAM,EAAE;AAJG;AA9EX,K;;UAmHRC,mB,GAAsB,UAACC,KAAD,EAAQC,eAAR,EAA4B;AAC9C,UAAMC,kBAAkB,qBACjB,MAAK5B,KAAL,CAAWC,YADM,CAAxB;;AAGA,UAAM4B,iBAAiB,qBAChBD,kBAAkB,CAACD,eAAD,CADF,CAAvB;;AAGAE,MAAAA,iBAAiB,CAACtB,KAAlB,GAA0BmB,KAAK,CAACI,MAAN,CAAavB,KAAvC;AACAsB,MAAAA,iBAAiB,CAACnB,KAAlB,GAA0B,MAAKqB,aAAL,CAAmBF,iBAAiB,CAACtB,KAArC,EAA4CsB,iBAAiB,CAACrB,UAA9D,CAA1B;AACAqB,MAAAA,iBAAiB,CAAClB,OAAlB,GAA4B,IAA5B;AACAiB,MAAAA,kBAAkB,CAACD,eAAD,CAAlB,GAAsCE,iBAAtC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACI,MAAN,CAAavB,KAAzB;AACAyB,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACI,MAAN,CAAaI,OAAzB;;AAEA,YAAKC,QAAL,CAAc;AAAClC,QAAAA,YAAY,EAAE2B;AAAf,OAAd;AACH,K;;UAEDQ,kB,GAAqB,UAACV,KAAD,EAAW;AAC5BM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACI,MAAN,CAAavB,KAAzB;;AACA,YAAK4B,QAAL,CAAc;AAACE,QAAAA,SAAS,EAAEX,KAAK,CAACI,MAAN,CAAavB;AAAzB,OAAd;AACH,K;;;;;;;kCAjDaA,K,EAAO+B,K,EAAO;AACxB,UAAIC,OAAO,GAAG,IAAd;;AACA,UAAI,CAACD,KAAL,EAAY;AACR,eAAO,IAAP;AACH;;AAED,UAAIA,KAAK,CAAC7B,QAAV,EAAoB;AAChB8B,QAAAA,OAAO,GAAGhC,KAAK,CAACiC,IAAN,OAAiB,EAA3B;AACH;;AAED,UAAIF,KAAK,CAACG,SAAV,EAAqB;AACjBF,QAAAA,OAAO,GAAGhC,KAAK,CAACmC,MAAN,IAAgBJ,KAAK,CAACG,SAAtB,IAAmCF,OAA7C;AACH;;AAED,UAAID,KAAK,CAACK,SAAV,EAAqB;AACjBJ,QAAAA,OAAO,GAAGhC,KAAK,CAACmC,MAAN,IAAgBJ,KAAK,CAACK,SAAtB,IAAmCJ,OAA7C;AACH;;AAED,UAAID,KAAK,CAACM,OAAV,EAAmB;AACfL,QAAAA,OAAO,GAAG,wIAAwIM,IAAxI,CAA6ItC,KAA7I,KAAuJgC,OAAjK;AACH;;AAED,UAAID,KAAK,CAACpB,SAAV,EAAqB;AACjBqB,QAAAA,OAAO,GAAG,QAAQM,IAAR,CAAatC,KAAb,KAAuBgC,OAAjC;AACH;;AAED,aAAOA,OAAP;AACH;;;6BAwBS;AAAA;;AACN,UAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7B,YAAI,MAAI,CAAC9C,KAAL,CAAWC,YAAX,CAAwBC,OAAxB,CAAgCQ,KAAhC,IACA,MAAI,CAACV,KAAL,CAAWC,YAAX,CAAwBY,aAAxB,CAAsCH,KADtC,IAEA,MAAI,CAACV,KAAL,CAAWC,YAAX,CAAwBe,QAAxB,CAAiCN,KAFjC,IAGA,MAAI,CAACV,KAAL,CAAWC,YAAX,CAAwBgB,SAAxB,CAAkCP,KAHlC,IAIA,MAAI,CAACqC,KAAL,CAAWC,IAAX,CAAgBC,EAJpB,EAIwB;AAChBjB,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,UAAA,MAAI,CAACc,KAAL,CAAWG,OAAX,CAAmB,MAAnB;AACP,SAPD,MAQK;AACDlB,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,OAZD;;AAcA,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAqC,QAAA,OAAO,EAAE,KAAKc,KAAL,CAAWI,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjE,CADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAE,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAqC,QAAA,GAAG,EAAC,QAAzC;AAAkD,QAAA,GAAG,iCACjD,KAAKrD,KAAL,CAAWoB,aAAX,CAAyB,KAAKpB,KAAL,CAAWC,YAAX,CAAwBY,aAAxB,CAAsCN,KAA/D,IACA,KAAKP,KAAL,CAAWC,YAAX,CAAwBC,OAAxB,CAAgCK,KAFiB,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAMI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAAC+C,UAAAA,UAAU,EAAE,MAAb;AAAqBD,UAAAA,SAAS,EAAE;AAAhC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,MAAM,CAACC,IAAP,CAAY,KAAKxD,KAAL,CAAWC,YAAvB,EAAqCwD,GAArC,CAAyC,UAAAC,GAAG;AAAA,eAC7C,oBAAC,KAAD;AACI,UAAA,GAAG,EAAEA,GADT;AAEI,UAAA,WAAW,EAAE,MAAI,CAAC1D,KAAL,CAAWC,YAAX,CAAwByD,GAAxB,EAA6BvD,WAF9C;AAGI,UAAA,aAAa,EAAE,MAAI,CAACH,KAAL,CAAWC,YAAX,CAAwByD,GAAxB,EAA6BtD,aAHhD;AAII,UAAA,KAAK,EAAE,MAAI,CAACJ,KAAL,CAAWC,YAAX,CAAwByD,GAAxB,EAA6BnD,KAJxC;AAKI,UAAA,OAAO,EAAE,CAAC,MAAI,CAACP,KAAL,CAAWC,YAAX,CAAwByD,GAAxB,EAA6BhD,KAL3C;AAMI,UAAA,cAAc,EAAE,MAAI,CAACV,KAAL,CAAWC,YAAX,CAAwByD,GAAxB,EAA6BlD,UANjD;AAOI,UAAA,OAAO,EAAE,MAAI,CAACR,KAAL,CAAWC,YAAX,CAAwByD,GAAxB,EAA6B/C,OAP1C;AAQI,UAAA,OAAO,EAAE,iBAACe,KAAD;AAAA,mBAAW,MAAI,CAACD,mBAAL,CAAyBC,KAAzB,EAAgCgC,GAAhC,CAAX;AAAA,WARb;AASI,UAAA,KAAK,EAAE,MAAI,CAAC1D,KAAL,CAAWC,YAAX,CAAwByD,GAAxB,EAA6B9C,KATxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD6C;AAAA,OAA5C,CADL,CANJ,CAFJ,EAyBI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,OAAO,EAAE;AAAA,iBAAMkC,kBAAkB,EAAxB;AAAA,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,MAAd;AAAsB,QAAA,IAAI,EAAE,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvE,CAzBJ,CAFJ,CADJ;AAgCH;;;;EAzLsBvD,S;;AA4L3B,IAAMoE,eAAe,GAAG,SAAlBA,eAAkB,CAAA3D,KAAK,EAAI;AAC7B,SAAO;AACHgD,IAAAA,IAAI,EAAEhD,KAAK,CAAC4D,OAAN,CAAcZ,IADjB;AAEHI,IAAAA,OAAO,EAAEpD,KAAK,CAAC6D,IAAN,CAAWT,OAAX,CAAmBU;AAFzB,GAAP;AAIH,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHd,IAAAA,OAAO,EAAE,iBAACe,IAAD;AAAA,aAAUD,QAAQ,CAAElE,IAAI,CAACoD,OAAL,CACzBe,IAAI,CAACjE,KAAL,CAAWC,YAAX,CAAwBC,OAAxB,CAAgCK,KADP,EAEzB0D,IAAI,CAACjE,KAAL,CAAWC,YAAX,CAAwBY,aAAxB,CAAsCN,KAFb,EAGzB0D,IAAI,CAACjE,KAAL,CAAWC,YAAX,CAAwBe,QAAxB,CAAiCT,KAHR,EAIzB0D,IAAI,CAACjE,KAAL,CAAWC,YAAX,CAAwBkB,eAAxB,CAAwCZ,KAJf,EAKzB0D,IAAI,CAACjE,KAAL,CAAWC,YAAX,CAAwBgB,SAAxB,CAAkCV,KALT,EAMzB0D,IAAI,CAAClB,KAAL,CAAWC,IAAX,CAAgBC,EANS,CAAF,CAAlB;AAAA;AADN,GAAP;AAWH,CAZD;;AAcA,eAAezD,OAAO,CAACmE,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ChE,YAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Input from '../../form/input/input.js';\r\nimport Hsecondary from \"../../heading-secondary/h-secondary.js\";\r\nimport BtnAn from \"../../button/btn-an.js\";\r\nimport BtnCancel from \"../../button/btn-cancel.js\";\r\nimport Loader from '../../loader/loader.js';\r\nimport * as card from '../../../store/actions/index.js';\r\nimport \"./edit-item-page.scss\";\r\n\r\n\r\nclass Edititempage extends Component {\r\n    state = {\r\n        editItemForm: {\r\n            imgpath: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter item path'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            \r\n            itemselection: {\r\n                elementType: 'select-v1',\r\n                elementConfig: {\r\n                    placeholder: ' , ',\r\n                    options: [\r\n                        {displayText: \"RobotV1\", value:'robotV1'},\r\n                        {displayText: \"Monster\", value:'monster'},\r\n                        {displayText: \"RobotV2\", value:'robotV2'},\r\n                        {displayText: \"Kitten\", value:'kitten'}\r\n                    ]\r\n                },\r\n                value: 'robotV1',\r\n                validation: {},\r\n                valid: true,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            itemname: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter item name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            itemprice: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter item price'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            itemdescription: {\r\n                elementType: 'textarea-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter item description'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            }\r\n        },\r\n        characterPath: {\r\n            robotV1: \"set_set1/\",\r\n            monster: \"set_set2/\",\r\n            robotV2: \"set_set3/\",\r\n            kitten: \"set_set4/\"\r\n        }\r\n    };\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '';\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            isValid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            isValid = /^\\d+$/.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updateEditItemForm = {\r\n            ...this.state.editItemForm\r\n        };\r\n        const updateFormElement = {\r\n            ...updateEditItemForm[inputIdentifier]\r\n        };\r\n        updateFormElement.value = event.target.value;\r\n        updateFormElement.valid = this.checkValidity(updateFormElement.value, updateFormElement.validation);\r\n        updateFormElement.touched = true;\r\n        updateEditItemForm[inputIdentifier] = updateFormElement;\r\n        console.log(event.target.value);\r\n        console.log(event.target.checked);\r\n\r\n        this.setState({editItemForm: updateEditItemForm});\r\n    }\r\n\r\n    formChangedHandler = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({formfront: event.target.value});\r\n    }\r\n\r\n    render () {\r\n        const sendRequestHandler = () => {\r\n            if (this.state.editItemForm.imgpath.valid && \r\n                this.state.editItemForm.itemselection.valid &&\r\n                this.state.editItemForm.itemname.valid &&\r\n                this.state.editItemForm.itemprice.valid &&\r\n                this.props.user.id ){\r\n                    console.log(\"connect\");\r\n                    this.props.addCard(this);\r\n            }\r\n            else {\r\n                console.log(\"error\");\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"editItemPage\">\r\n                <div className=\"editItemPage-cancel\" onClick={this.props.cancel}><BtnCancel color=\"blue\" /></div>\r\n                <Loader load={this.props.loading}>\r\n                    <div className=\"editItemPage-h\"><Hsecondary text={\"update item\"} /></div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-1-of-4\" style={{textAlign: \"center\"}}>\r\n                            <img className=\"card-side-front-img\" alt='robots' src={`https://robohash.org/${ \r\n                                this.state.characterPath[this.state.editItemForm.itemselection.value] + \r\n                                this.state.editItemForm.imgpath.value}?50x50`} />\r\n                        </div>\r\n                        <div className=\"col-1-of-2\" style={{paddingTop: \"1rem\" ,textAlign: \"left\"}}>\r\n                            {Object.keys(this.state.editItemForm).map(key => (\r\n                            <Input\r\n                                key={key}\r\n                                elementType={this.state.editItemForm[key].elementType}\r\n                                elementConfig={this.state.editItemForm[key].elementConfig}\r\n                                value={this.state.editItemForm[key].value}\r\n                                invalid={!this.state.editItemForm[key].valid}\r\n                                shouldValidate={this.state.editItemForm[key].validation}\r\n                                touched={this.state.editItemForm[key].touched}\r\n                                changed={(event) => this.inputChangedHandler(event, key)}\r\n                                label={this.state.editItemForm[key].label}\r\n\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editItemPage-btn\" onClick={() => sendRequestHandler()}><BtnAn color={\"blue\"} text={\"update\"} /></div>\r\n                </Loader>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.account.user,\r\n        loading: state.form.loading.editItem\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addCard: (comp) => dispatch( card.addCard(\r\n            comp.state.editItemForm.imgpath.value, \r\n            comp.state.editItemForm.itemselection.value,\r\n            comp.state.editItemForm.itemname.value,\r\n            comp.state.editItemForm.itemdescription.value,\r\n            comp.state.editItemForm.itemprice.value,\r\n            comp.props.user.id\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edititempage);"]},"metadata":{},"sourceType":"module"}