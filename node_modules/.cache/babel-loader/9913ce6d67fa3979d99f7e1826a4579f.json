{"ast":null,"code":"import _objectSpread from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\src\\\\comp\\\\search-menu\\\\search-menu.js\";\nimport React, { Component } from 'react';\nimport Input from '../form/input/input.js';\nimport './search-menu.scss';\n\nvar SearchMenu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchMenu, _Component);\n\n  function SearchMenu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      menu: {\n        creatures: {\n          elementType: 'checkbox-v1',\n          elementConfig: {\n            name: 'creature',\n            options: [{\n              text: 'robot-v1',\n              displayText: \"RobotV1\",\n              value: ''\n            }, {\n              text: 'robot-v2',\n              displayText: \"RobotV2\",\n              value: ''\n            }, {\n              text: 'monster',\n              displayText: \"Monster\",\n              value: ''\n            }, {\n              text: 'cat',\n              displayText: \"Cat\",\n              value: ''\n            }]\n          },\n          value: '',\n          validation: {},\n          valid: false,\n          touched: true,\n          label: true\n        },\n        price: {\n          elementType: 'checkbox-v1',\n          elementConfig: {\n            name: 'price',\n            options: [{\n              text: '0',\n              displayText: \"Under $1\",\n              value: ''\n            }, {\n              text: '1',\n              displayText: \"$1 to $2\",\n              value: ''\n            }, {\n              text: '2 above',\n              displayText: \"$2 and Above\",\n              value: ''\n            }]\n          },\n          value: '',\n          validation: {},\n          valid: false,\n          touched: true,\n          label: true\n        },\n        time: {\n          elementType: 'radio-v2',\n          elementConfig: {\n            name: 'accept',\n            options: [{\n              text: 'today',\n              displayText: \"Today\",\n              value: ''\n            }, {\n              text: 'this week',\n              displayText: \"This Week\",\n              value: ''\n            }, {\n              text: 'this month',\n              displayText: \"This Month\",\n              value: ''\n            }]\n          },\n          value: 'today',\n          validation: {},\n          valid: false,\n          touched: true,\n          label: true\n        }\n      }\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier, i) {\n      var updateMenu = _objectSpread({}, _this.state.menu);\n\n      var updateMenuElement = _objectSpread({}, updateMenu[inputIdentifier]);\n\n      updateMenuElement.touched = true;\n      console.log(event.target.checked);\n      updateMenuElement.elementConfig.options[i].value = updateMenuElement.elementConfig.options[i].value === updateMenuElement.elementConfig.options[i].text ? \"\" : updateMenuElement.elementConfig.options[i].text;\n      updateMenuElement.value = updateMenuElement.value === updateMenuElement.elementConfig.options[i].text ? \"\" : updateMenuElement.elementConfig.options[i].text;\n      updateMenu[inputIdentifier] = updateMenuElement;\n      console.log(updateMenuElement.value);\n\n      _this.setState({\n        menu: updateMenu\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"search-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-menu-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-menu-item-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"hello\"), React.createElement(\"div\", {\n        className: \"search-menu-item-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Input, {\n        elementType: this.state.menu[\"creatures\"].elementType,\n        elementConfig: this.state.menu[\"creatures\"].elementConfig,\n        value: this.state.menu[\"creatures\"].value,\n        invalid: !this.state.menu[\"creatures\"].valid,\n        shouldValidate: this.state.menu[\"creatures\"].validation,\n        touched: this.state.menu[\"creatures\"].touched,\n        changed: function changed(event, index) {\n          return _this2.inputChangedHandler(event, \"creatures\", index);\n        },\n        label: this.state.menu[\"creatures\"].label,\n        checked: this.state.menu[\"creatures\"].checked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-menu-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-menu-item-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"hello\"), React.createElement(\"div\", {\n        className: \"search-menu-item-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Input, {\n        elementType: this.state.menu[\"price\"].elementType,\n        elementConfig: this.state.menu[\"price\"].elementConfig,\n        value: this.state.menu[\"price\"].value,\n        invalid: !this.state.menu[\"price\"].valid,\n        shouldValidate: this.state.menu[\"price\"].validation,\n        touched: this.state.menu[\"price\"].touched,\n        changed: function changed(event, index) {\n          return _this2.inputChangedHandler(event, \"price\", index);\n        },\n        label: this.state.menu[\"price\"].label,\n        checked: this.state.menu[\"price\"].checked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-menu-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-menu-item-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"hello\"), React.createElement(\"div\", {\n        className: \"search-menu-item-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Input, {\n        elementType: this.state.menu[\"time\"].elementType,\n        elementConfig: this.state.menu[\"time\"].elementConfig,\n        value: this.state.menu[\"time\"].value,\n        invalid: !this.state.menu[\"time\"].valid,\n        shouldValidate: this.state.menu[\"time\"].validation,\n        touched: this.state.menu[\"time\"].touched,\n        changed: function changed(event, index) {\n          return _this2.inputChangedHandler(event, \"time\", index);\n        },\n        label: this.state.menu[\"time\"].label,\n        checked: this.state.menu[\"time\"].checked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-menu-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-menu-item-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"hello\")));\n    }\n  }]);\n\n  return SearchMenu;\n}(Component);\n\n;\nexport default SearchMenu;","map":{"version":3,"sources":["D:\\udemy\\project\\pixwebsite\\src\\comp\\search-menu\\search-menu.js"],"names":["React","Component","Input","SearchMenu","state","menu","creatures","elementType","elementConfig","name","options","text","displayText","value","validation","valid","touched","label","price","time","inputChangedHandler","event","inputIdentifier","i","updateMenu","updateMenuElement","console","log","target","checked","setState","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Input from '../form/input/input.js';\r\nimport './search-menu.scss';\r\n\r\nclass SearchMenu extends Component {\r\n    state = {\r\n        menu: {\r\n            creatures: {\r\n                elementType: 'checkbox-v1',\r\n                elementConfig: {\r\n                    name: 'creature',\r\n                    options: [\r\n                        {text: 'robot-v1', displayText: \"RobotV1\", value:''},\r\n                        {text: 'robot-v2', displayText: \"RobotV2\", value:''},\r\n                        {text: 'monster', displayText: \"Monster\", value:''},\r\n                        {text: 'cat', displayText: \"Cat\", value:''}\r\n                    ]\r\n                },\r\n                value: '',\r\n                validation: {},\r\n                valid: false,\r\n                touched: true,\r\n                label: true\r\n            },\r\n            price: {\r\n                elementType: 'checkbox-v1',\r\n                elementConfig: {\r\n                    name: 'price',\r\n                    options: [\r\n                        {text: '0', displayText: \"Under $1\", value:''},\r\n                        {text: '1', displayText: \"$1 to $2\", value:''},\r\n                        {text: '2 above', displayText: \"$2 and Above\", value:''}\r\n                    ]\r\n                },\r\n                value: '',\r\n                validation: {},\r\n                valid: false,\r\n                touched: true,\r\n                label: true\r\n            },\r\n            time: {\r\n                elementType: 'radio-v2',\r\n                elementConfig: {\r\n                    name: 'accept',\r\n                    options: [\r\n                        {text: 'today', displayText: \"Today\", value:''},\r\n                        {text: 'this week', displayText: \"This Week\", value:''},\r\n                        {text: 'this month', displayText: \"This Month\", value:''}\r\n                    ]\r\n                },\r\n                value: 'today',\r\n                validation: {},\r\n                valid: false,\r\n                touched: true,\r\n                label: true\r\n            },\r\n        }\r\n    };\r\n\r\n    inputChangedHandler = (event, inputIdentifier, i) => {\r\n        const updateMenu = {\r\n            ...this.state.menu\r\n        };\r\n        const updateMenuElement = {\r\n            ...updateMenu[inputIdentifier]\r\n        };\r\n        updateMenuElement.touched = true;\r\n        console.log(event.target.checked);\r\n        updateMenuElement.elementConfig.options[i].value = (updateMenuElement.elementConfig.options[i].value===updateMenuElement.elementConfig.options[i].text)?\"\":updateMenuElement.elementConfig.options[i].text;\r\n        updateMenuElement.value = (updateMenuElement.value===updateMenuElement.elementConfig.options[i].text)?\"\":updateMenuElement.elementConfig.options[i].text;\r\n        updateMenu[inputIdentifier] = updateMenuElement;\r\n        console.log(updateMenuElement.value);\r\n\r\n        this.setState({menu: updateMenu});\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"search-menu\">\r\n                <div className=\"search-menu-item\">\r\n                    <div className=\"search-menu-item-btn\">hello</div>\r\n                    <div className=\"search-menu-item-input\">\r\n                        <Input\r\n                            elementType={this.state.menu[\"creatures\"].elementType}\r\n                            elementConfig={this.state.menu[\"creatures\"].elementConfig}\r\n                            value={this.state.menu[\"creatures\"].value}\r\n                            invalid={!this.state.menu[\"creatures\"].valid}\r\n                            shouldValidate={this.state.menu[\"creatures\"].validation}\r\n                            touched={this.state.menu[\"creatures\"].touched}\r\n                            changed={(event, index) => this.inputChangedHandler(event, \"creatures\", index)}\r\n                            label={this.state.menu[\"creatures\"].label}\r\n                            checked={this.state.menu[\"creatures\"].checked}\r\n                            />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-menu-item\">\r\n                    <div className=\"search-menu-item-btn\">hello</div>\r\n                    <div className=\"search-menu-item-input\">\r\n                        <Input\r\n                            elementType={this.state.menu[\"price\"].elementType}\r\n                            elementConfig={this.state.menu[\"price\"].elementConfig}\r\n                            value={this.state.menu[\"price\"].value}\r\n                            invalid={!this.state.menu[\"price\"].valid}\r\n                            shouldValidate={this.state.menu[\"price\"].validation}\r\n                            touched={this.state.menu[\"price\"].touched}\r\n                            changed={(event, index) => this.inputChangedHandler(event, \"price\", index)}\r\n                            label={this.state.menu[\"price\"].label}\r\n                            checked={this.state.menu[\"price\"].checked}\r\n                            />\r\n                        </div>\r\n                </div>\r\n                <div className=\"search-menu-item\">\r\n                    <div className=\"search-menu-item-btn\">hello</div>\r\n                    <div className=\"search-menu-item-input\">\r\n                        <Input\r\n                            elementType={this.state.menu[\"time\"].elementType}\r\n                            elementConfig={this.state.menu[\"time\"].elementConfig}\r\n                            value={this.state.menu[\"time\"].value}\r\n                            invalid={!this.state.menu[\"time\"].valid}\r\n                            shouldValidate={this.state.menu[\"time\"].validation}\r\n                            touched={this.state.menu[\"time\"].touched}\r\n                            changed={(event, index) => this.inputChangedHandler(event, \"time\", index)}\r\n                            label={this.state.menu[\"time\"].label}\r\n                            checked={this.state.menu[\"time\"].checked}\r\n                            />\r\n                        </div>\r\n                </div>\r\n                <div className=\"search-menu-item\">\r\n                    <div className=\"search-menu-item-btn\">hello</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SearchMenu;"]},"metadata":{},"sourceType":"module"}