{"ast":null,"code":"import _objectSpread from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\src\\\\comp\\\\float-pages\\\\edit-item-page\\\\edit-item-page.js\";\nimport React, { Component } from 'react';\nimport Input from '../../form/input/input.js';\nimport Hsecondary from \"../../heading-secondary/h-secondary.js\";\nimport BtnAn from \"../../button/btn-an.js\";\nimport \"./edit-item-page.scss\";\n\nvar Edititempage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Edititempage, _Component);\n\n  function Edititempage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Edititempage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Edititempage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      signupForm: {\n        itemname: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter item name'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        imgpath: {\n          elementType: 'input-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter item image name'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        },\n        password: {\n          elementType: 'textarea-v1',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Enter item description'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          label: true\n        }\n      }\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier) {\n      var updateSignupForm = _objectSpread({}, _this.state.signupForm);\n\n      var updateFormElement = _objectSpread({}, updateSignupForm[inputIdentifier]);\n\n      updateFormElement.value = event.target.value;\n      updateFormElement.valid = _this.checkValidity(updateFormElement.value, updateFormElement.validation);\n      updateFormElement.touched = true;\n      updateSignupForm[inputIdentifier] = updateFormElement;\n      console.log(event.target.value);\n      console.log(event.target.checked);\n\n      _this.setState({\n        signupForm: updateSignupForm\n      });\n    };\n\n    _this.formChangedHandler = function (event) {\n      console.log(event.target.value);\n\n      _this.setState({\n        formfront: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Edititempage, [{\n    key: \"checkValidity\",\n    value: function checkValidity(value, rules) {\n      var isValid = true;\n\n      if (!rules) {\n        return true;\n      }\n\n      if (rules.required) {\n        isValid = value.trim() !== '';\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      if (rules.isEmail) {\n        isValid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(value) && isValid;\n      }\n\n      if (rules.isNumeric) {\n        isValid = /^\\d+$/.test(value) && isValid;\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"editItemPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-1-of-4\",\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"card-side-front-img\",\n        alt: \"robots\",\n        src: \"https://robohash.org/\".concat(1, \"?1110x1110\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-1-of-2\",\n        style: {\n          padding: \"2rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, Object.keys(this.state.signupForm).map(function (key) {\n        return React.createElement(Input, {\n          key: key,\n          elementType: _this2.state.signupForm[key].elementType,\n          elementConfig: _this2.state.signupForm[key].elementConfig,\n          value: _this2.state.signupForm[key].value,\n          invalid: !_this2.state.signupForm[key].valid,\n          shouldValidate: _this2.state.signupForm[key].validation,\n          touched: _this2.state.signupForm[key].touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, key);\n          },\n          label: _this2.state.signupForm[key].label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        className: \"form-login-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(BtnAn, {\n        color: \"blue\",\n        text: \"sign up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Edititempage;\n}(Component);\n\nexport default Edititempage;","map":{"version":3,"sources":["D:\\udemy\\project\\pixwebsite\\src\\comp\\float-pages\\edit-item-page\\edit-item-page.js"],"names":["React","Component","Input","Hsecondary","BtnAn","Edititempage","state","signupForm","itemname","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","label","imgpath","password","inputChangedHandler","event","inputIdentifier","updateSignupForm","updateFormElement","target","checkValidity","console","log","checked","setState","formChangedHandler","formfront","rules","isValid","trim","minLength","length","maxLength","isEmail","test","isNumeric","textAlign","padding","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Input from '../../form/input/input.js';\r\nimport Hsecondary from \"../../heading-secondary/h-secondary.js\";\r\nimport BtnAn from \"../../button/btn-an.js\";\r\nimport \"./edit-item-page.scss\";\r\n\r\n\r\nclass Edititempage extends Component {\r\n    state = {\r\n        signupForm: {\r\n            itemname: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter item name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            imgpath: {\r\n                elementType: 'input-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter item image name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            },\r\n            password: {\r\n                elementType: 'textarea-v1',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Enter item description'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                label: true\r\n            }\r\n        }\r\n    };\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '';\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            isValid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            isValid = /^\\d+$/.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updateSignupForm = {\r\n            ...this.state.signupForm\r\n        };\r\n        const updateFormElement = {\r\n            ...updateSignupForm[inputIdentifier]\r\n        };\r\n        updateFormElement.value = event.target.value;\r\n        updateFormElement.valid = this.checkValidity(updateFormElement.value, updateFormElement.validation);\r\n        updateFormElement.touched = true;\r\n        updateSignupForm[inputIdentifier] = updateFormElement;\r\n        console.log(event.target.value);\r\n        console.log(event.target.checked);\r\n\r\n        this.setState({signupForm: updateSignupForm});\r\n    }\r\n\r\n    formChangedHandler = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({formfront: event.target.value});\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"editItemPage\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-1-of-4\" style={{textAlign: \"center\"}}>\r\n                        <img className=\"card-side-front-img\" alt='robots' src={`https://robohash.org/${1}?1110x1110`} />\r\n                    </div>\r\n                    <div className=\"col-1-of-2\" style={{padding: \"2rem\"}}>\r\n                        {Object.keys(this.state.signupForm).map(key => (\r\n                        <Input\r\n                            key={key}\r\n                            elementType={this.state.signupForm[key].elementType}\r\n                            elementConfig={this.state.signupForm[key].elementConfig}\r\n                            value={this.state.signupForm[key].value}\r\n                            invalid={!this.state.signupForm[key].valid}\r\n                            shouldValidate={this.state.signupForm[key].validation}\r\n                            touched={this.state.signupForm[key].touched}\r\n                            changed={(event) => this.inputChangedHandler(event, key)}\r\n                            label={this.state.signupForm[key].label}\r\n                            />\r\n                        ))}\r\n                        <div className=\"form-login-btn\"><BtnAn color={\"blue\"} text={\"sign up\"} /></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Edititempage;"]},"metadata":{},"sourceType":"module"}