{"ast":null,"code":"var _jsxFileName = \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\src\\\\comp\\\\form\\\\input\\\\input.js\";\nimport React from 'react';\nimport \"./input.scss\";\n\nvar Input = function Input(props) {\n  var inputElement = null;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: \"input\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n      break;\n\n    case 'input-v1':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: \"input-v1\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n      break;\n\n    case 'radio-v1':\n      inputElement = props.elementConfig.options.map(function (option) {\n        return React.createElement(\"div\", {\n          className: \"radio-v1\",\n          key: option.text,\n          value: props.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"radio-v1-input\",\n          type: 'radio',\n          id: option.text,\n          name: props.elementConfig.name,\n          onChange: props.changed,\n          value: props.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"radio-v1-label\",\n          htmlFor: option.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"radio-v1-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), option.displayText));\n      });\n      break;\n\n    case 'radio-v2':\n      inputElement = props.elementConfig.options.map(function (option) {\n        return React.createElement(\"div\", {\n          className: \"radio-v2\",\n          key: option.text,\n          value: props.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          key: option.text,\n          className: \"radio-v2-input\",\n          type: 'radio',\n          id: option.text,\n          name: props.elementConfig.name,\n          onClick: props.changed,\n          value: props.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"radio-v2-label\",\n          htmlFor: option.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, option.displayText));\n      });\n      break;\n\n    case 'checkbox-v1':\n      inputElement = props.elementConfig.options.map(function (option) {\n        return React.createElement(\"div\", {\n          className: \"checkbox-v1\",\n          key: option.text,\n          value: props.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          I: option.id,\n          className: \"checkbox-v1-input\",\n          type: 'checkbox',\n          id: option.text,\n          name: props.elementConfig.name,\n          onChange: props.changed,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"checkbox-v1-label\",\n          htmlFor: option.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, option.displayText));\n      });\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: \"input\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, inputElement, props.label ? React.createElement(\"div\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, props.elementConfig.placeholder) : \"\");\n};\n\nexport default Input;","map":{"version":3,"sources":["D:\\udemy\\project\\pixwebsite\\src\\comp\\form\\input\\input.js"],"names":["React","Input","props","inputElement","elementType","elementConfig","value","changed","options","map","option","text","name","displayText","id","label","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAErB,MAAIC,YAAY,GAAG,IAAnB;;AAEA,UAAQD,KAAK,CAACE,WAAd;AACI,SAAM,OAAN;AACID,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAC;AADC,SAEPD,KAAK,CAACG,aAFC;AAGX,QAAA,KAAK,EAAEH,KAAK,CAACI,KAHF;AAIX,QAAA,QAAQ,EAAEJ,KAAK,CAACK,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAKA;;AAEJ,SAAM,UAAN;AACIJ,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAE;AADA,SAEPD,KAAK,CAACG,aAFC;AAGX,QAAA,KAAK,EAAEH,KAAK,CAACI,KAHF;AAIX,QAAA,QAAQ,EAAEJ,KAAK,CAACK,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAKA;;AAEJ,SAAM,UAAN;AACIJ,MAAAA,YAAY,GAAGD,KAAK,CAACG,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgC,UAAAC,MAAM;AAAA,eAC7C;AACI,UAAA,SAAS,EAAE,UADf;AAEI,UAAA,GAAG,EAAEA,MAAM,CAACC,IAFhB;AAGI,UAAA,KAAK,EAAET,KAAK,CAACI,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKQ;AACI,UAAA,SAAS,EAAE,gBADf;AAEI,UAAA,IAAI,EAAE,OAFV;AAGI,UAAA,EAAE,EAAEI,MAAM,CAACC,IAHf;AAII,UAAA,IAAI,EAAET,KAAK,CAACG,aAAN,CAAoBO,IAJ9B;AAKI,UAAA,QAAQ,EAAEV,KAAK,CAACK,OALpB;AAMI,UAAA,KAAK,EAAEL,KAAK,CAACI,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALR,EAcQ;AACI,UAAA,SAAS,EAAE,gBADf;AAEI,UAAA,OAAO,EAAEI,MAAM,CAACC,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAII;AAAM,UAAA,SAAS,EAAE,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,EAKKD,MAAM,CAACG,WALZ,CAdR,CAD6C;AAAA,OAAtC,CAAf;AAyBA;;AAEJ,SAAM,UAAN;AACIV,MAAAA,YAAY,GAAGD,KAAK,CAACG,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgC,UAACC,MAAD;AAAA,eACvC;AACI,UAAA,SAAS,EAAE,UADf;AAEI,UAAA,GAAG,EAAEA,MAAM,CAACC,IAFhB;AAGI,UAAA,KAAK,EAAET,KAAK,CAACI,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKQ;AACI,UAAA,GAAG,EAAEI,MAAM,CAACC,IADhB;AAEI,UAAA,SAAS,EAAE,gBAFf;AAGI,UAAA,IAAI,EAAE,OAHV;AAII,UAAA,EAAE,EAAED,MAAM,CAACC,IAJf;AAKI,UAAA,IAAI,EAAET,KAAK,CAACG,aAAN,CAAoBO,IAL9B;AAMI,UAAA,OAAO,EAAEV,KAAK,CAACK,OANnB;AAOI,UAAA,KAAK,EAAEL,KAAK,CAACI,KAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALR,EAeQ;AACI,UAAA,SAAS,EAAE,gBADf;AAEI,UAAA,OAAO,EAAEI,MAAM,CAACC,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKD,MAAM,CAACG,WAJZ,CAfR,CADuC;AAAA,OAAhC,CAAf;AAyBA;;AAEJ,SAAM,aAAN;AACIV,MAAAA,YAAY,GAAGD,KAAK,CAACG,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgC,UAACC,MAAD;AAAA,eACvC;AACI,UAAA,SAAS,EAAE,aADf;AAEI,UAAA,GAAG,EAAEA,MAAM,CAACC,IAFhB;AAGI,UAAA,KAAK,EAAET,KAAK,CAACI,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKQ;AACI,UAAA,CAAC,EAAEI,MAAM,CAACI,EADd;AAEI,UAAA,SAAS,EAAE,mBAFf;AAGI,UAAA,IAAI,EAAE,UAHV;AAII,UAAA,EAAE,EAAEJ,MAAM,CAACC,IAJf;AAKI,UAAA,IAAI,EAAET,KAAK,CAACG,aAAN,CAAoBO,IAL9B;AAMI,UAAA,QAAQ,EAAEV,KAAK,CAACK,OANpB;AAOI,UAAA,KAAK,EAAEG,MAAM,CAACJ,KAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALR,EAeQ;AACI,UAAA,SAAS,EAAE,mBADf;AAEI,UAAA,OAAO,EAAEI,MAAM,CAACC,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKD,MAAM,CAACG,WAJZ,CAfR,CADuC;AAAA,OAAhC,CAAf;AAyBA;;AAEJ;AACIV,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAC;AADC,SAEPD,KAAK,CAACG,aAFC;AAGX,QAAA,KAAK,EAAEH,KAAK,CAACI,KAHF;AAIX,QAAA,QAAQ,EAAEJ,KAAK,CAACK,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAtGR;;AA6GA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,YADL,EAEMD,KAAK,CAACa,KAAP,GAAe;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBb,KAAK,CAACG,aAAN,CAAoBW,WAA5C,CAAf,GAA+E,EAFpF,CADJ;AAMH,CAvHD;;AAyHA,eAAef,KAAf","sourcesContent":["import React from 'react';\r\nimport \"./input.scss\";\r\n\r\nconst Input = (props) => {\r\n\r\n    let inputElement = null;\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                className=\"input\"\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n\r\n        case ('input-v1'):\r\n            inputElement = <input \r\n                className={\"input-v1\"}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n\r\n        case ('radio-v1'):\r\n            inputElement = props.elementConfig.options.map(option => (\r\n                    <div \r\n                        className={\"radio-v1\"} \r\n                        key={option.text}\r\n                        value={props.value}\r\n                        >\r\n                            <input\r\n                                className={\"radio-v1-input\"}\r\n                                type={'radio'}\r\n                                id={option.text}\r\n                                name={props.elementConfig.name}\r\n                                onChange={props.changed}\r\n                                value={props.value}\r\n                            >\r\n                            </input>\r\n                            <label\r\n                                className={\"radio-v1-label\"}\r\n                                htmlFor={option.text}\r\n                            >\r\n                                <span className={\"radio-v1-button\"}></span>\r\n                                {option.displayText}\r\n                            </label>\r\n\r\n                    </div>\r\n                ))\r\n            break;\r\n        \r\n        case ('radio-v2'):\r\n            inputElement = props.elementConfig.options.map((option) => (\r\n                    <div \r\n                        className={\"radio-v2\"} \r\n                        key={option.text}\r\n                        value={props.value}\r\n                        >\r\n                            <input\r\n                                key={option.text}\r\n                                className={\"radio-v2-input\"}\r\n                                type={'radio'}\r\n                                id={option.text}\r\n                                name={props.elementConfig.name}\r\n                                onClick={props.changed}\r\n                                value={props.value}\r\n                            >\r\n                            </input>\r\n                            <label\r\n                                className={\"radio-v2-label\"}\r\n                                htmlFor={option.text}\r\n                            >\r\n                                {option.displayText}\r\n                            </label>\r\n\r\n                    </div>\r\n                ))\r\n            break;\r\n        \r\n        case ('checkbox-v1'):\r\n            inputElement = props.elementConfig.options.map((option) => (\r\n                    <div \r\n                        className={\"checkbox-v1\"} \r\n                        key={option.text}\r\n                        value={props.value}\r\n                        >\r\n                            <input\r\n                                I={option.id}\r\n                                className={\"checkbox-v1-input\"}\r\n                                type={'checkbox'}\r\n                                id={option.text}\r\n                                name={props.elementConfig.name}\r\n                                onChange={props.changed}\r\n                                value={option.value}\r\n                            >\r\n                            </input>\r\n                            <label\r\n                                className={\"checkbox-v1-label\"}\r\n                                htmlFor={option.text}\r\n                            >\r\n                                {option.displayText}\r\n                            </label>\r\n\r\n                    </div>\r\n                ))\r\n            break;\r\n        \r\n        default:\r\n            inputElement = <input \r\n                className=\"input\"\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {inputElement}\r\n            {(props.label)?(<div className=\"label\">{props.elementConfig.placeholder}</div>):\"\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}