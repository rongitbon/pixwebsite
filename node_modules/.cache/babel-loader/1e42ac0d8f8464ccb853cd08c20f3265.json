{"ast":null,"code":"import _objectSpread from \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionType.js';\nimport axios from 'axios';\nvar initialState = {\n  userCards: [],\n  cheapestCards: {},\n  load: {\n    cheapest: {\n      kitten: true,\n      robotV1: true,\n      monster: true,\n      robotV2: true\n    },\n    book: true\n  }\n};\n\nvar account = function account() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var UpdateState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case actionTypes.ADD_CARD_TO_THE_DECK:\n      UpdateState.userCards.push(action.card);\n      return UpdateState;\n\n    case actionTypes.SET_USER_DECK:\n      UpdateState.userCards = action.deck;\n      return UpdateState;\n\n    case actionTypes.SET_BOOK_CARDS:\n      UpdateState.userCards = action.cards;\n      UpdateState.load.book = false;\n      return UpdateState;\n\n    case actionTypes.SET_CHEAPEST_CARDS:\n      UpdateState.cheapestCards[action.character_type] = action.cards;\n      UpdateState.load.cheapest[action.character_type] = false;\n      return UpdateState;\n\n    case actionTypes.DELETE_CARD:\n      UpdateState.userCards = UpdateState.userCards.filter(function (card) {\n        return card !== action.id;\n      });\n      UpdateState.load.cheapest[action.character_type] = false;\n      return UpdateState;\n\n    default:\n      return state;\n      break;\n  }\n};\n\nexport default account;","map":{"version":3,"sources":["D:\\udemy\\project\\pixwebsite\\src\\store\\reducers\\card.js"],"names":["actionTypes","axios","initialState","userCards","cheapestCards","load","cheapest","kitten","robotV1","monster","robotV2","book","account","state","action","UpdateState","type","ADD_CARD_TO_THE_DECK","push","card","SET_USER_DECK","deck","SET_BOOK_CARDS","cards","SET_CHEAPEST_CARDS","character_type","DELETE_CARD","filter","id"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,0BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAG,EADK;AAEjBC,EAAAA,aAAa,EAAE,EAFE;AAGjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAG;AACPC,MAAAA,MAAM,EAAE,IADD;AAEPC,MAAAA,OAAO,EAAE,IAFF;AAGPC,MAAAA,OAAO,EAAE,IAHF;AAIPC,MAAAA,OAAO,EAAE;AAJF,KADT;AAOFC,IAAAA,IAAI,EAAG;AAPL;AAHW,CAArB;;AAcA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AAC9C,MAAMC,WAAW,qBAAOF,KAAP,CAAjB;;AAEA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAKhB,WAAW,CAACiB,oBAAjB;AACIF,MAAAA,WAAW,CAACZ,SAAZ,CAAsBe,IAAtB,CAA2BJ,MAAM,CAACK,IAAlC;AACA,aAAOJ,WAAP;;AAEJ,SAAKf,WAAW,CAACoB,aAAjB;AACIL,MAAAA,WAAW,CAACZ,SAAZ,GAAwBW,MAAM,CAACO,IAA/B;AACA,aAAON,WAAP;;AAEJ,SAAKf,WAAW,CAACsB,cAAjB;AACIP,MAAAA,WAAW,CAACZ,SAAZ,GAAwBW,MAAM,CAACS,KAA/B;AACAR,MAAAA,WAAW,CAACV,IAAZ,CAAiBM,IAAjB,GAAwB,KAAxB;AACA,aAAOI,WAAP;;AAEJ,SAAKf,WAAW,CAACwB,kBAAjB;AACIT,MAAAA,WAAW,CAACX,aAAZ,CAA0BU,MAAM,CAACW,cAAjC,IAAmDX,MAAM,CAACS,KAA1D;AACAR,MAAAA,WAAW,CAACV,IAAZ,CAAiBC,QAAjB,CAA0BQ,MAAM,CAACW,cAAjC,IAAmD,KAAnD;AACA,aAAOV,WAAP;;AAEJ,SAAKf,WAAW,CAAC0B,WAAjB;AACIX,MAAAA,WAAW,CAACZ,SAAZ,GAAwBY,WAAW,CAACZ,SAAZ,CAAsBwB,MAAtB,CAA6B,UAAAR,IAAI;AAAA,eAAIA,IAAI,KAAKL,MAAM,CAACc,EAApB;AAAA,OAAjC,CAAxB;AACAb,MAAAA,WAAW,CAACV,IAAZ,CAAiBC,QAAjB,CAA0BQ,MAAM,CAACW,cAAjC,IAAmD,KAAnD;AACA,aAAOV,WAAP;;AAEJ;AACI,aAAOF,KAAP;AACA;AA1BR;AA4BH,CA/BD;;AAiCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionType.js';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n    userCards : [],\r\n    cheapestCards: {},\r\n    load: {\r\n        cheapest : {\r\n            kitten: true,\r\n            robotV1: true,\r\n            monster: true,\r\n            robotV2: true,\r\n        },\r\n        book : true\r\n    }\r\n};\r\n\r\nconst account = (state = initialState, action) => {\r\n    const UpdateState = {...state};\r\n\r\n    switch (action.type) {\r\n        case actionTypes.ADD_CARD_TO_THE_DECK:\r\n            UpdateState.userCards.push(action.card);\r\n            return UpdateState;\r\n        \r\n        case actionTypes.SET_USER_DECK:\r\n            UpdateState.userCards = action.deck;\r\n            return UpdateState;\r\n\r\n        case actionTypes.SET_BOOK_CARDS:\r\n            UpdateState.userCards = action.cards;\r\n            UpdateState.load.book = false;\r\n            return UpdateState;\r\n\r\n        case actionTypes.SET_CHEAPEST_CARDS:\r\n            UpdateState.cheapestCards[action.character_type] = action.cards;\r\n            UpdateState.load.cheapest[action.character_type] = false;\r\n            return UpdateState;\r\n\r\n        case actionTypes.DELETE_CARD:\r\n            UpdateState.userCards = UpdateState.userCards.filter(card => card !== action.id);\r\n            UpdateState.load.cheapest[action.character_type] = false;\r\n            return UpdateState;\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n};\r\n\r\nexport default account;"]},"metadata":{},"sourceType":"module"}