{"ast":null,"code":"import * as actionTypes from './actionType.js';\nimport axios from 'axios';\nexport var setUserInfo = function setUserInfo(userInfo) {\n  return {\n    type: actionTypes.SET_USER_INFO,\n    userInfo: userInfo\n  };\n};\nexport var loginFailed = function loginFailed(error) {\n  return {\n    type: actionTypes.LOGIN_FAILED,\n    error: error\n  };\n};\nexport var signupFailed = function signupFailed(error) {\n  return {\n    type: actionTypes.SIGNUP_FAILED,\n    error: error\n  };\n};\nexport var login = function login(email, password) {\n  return function (dispatch) {\n    axios.post('http://localhost:3001/login', {\n      email: email,\n      password: password\n    }).then(function (user) {\n      dispatch(setUserInfo(user.data));\n    }).catch(function (error) {\n      return dispatch(loginFailed(error));\n    });\n  };\n};\nexport var signup = function signup(email, nickname, password) {\n  return function (dispatch) {\n    axios.post('http://localhost:3001/signup', {\n      email: email,\n      nickname: nickname,\n      password: password\n    }).then(function (user) {\n      dispatch(setUserInfo(user.data));\n    }).catch(function (error) {\n      return dispatch(signupFailed(error));\n    });\n  };\n};","map":{"version":3,"sources":["D:\\udemy\\project\\pixwebsite\\src\\store\\actions\\account.js"],"names":["actionTypes","axios","setUserInfo","userInfo","type","SET_USER_INFO","loginFailed","error","LOGIN_FAILED","signupFailed","SIGNUP_FAILED","login","email","password","dispatch","post","then","user","data","catch","signup","nickname"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,iBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,aADf;AAEHF,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CALM;AAOP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAClC,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,YADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACF,KAAD,EAAW;AACnC,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACU,aADf;AAEHH,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,IAAMI,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAEtC,SAAO,UAACC,QAAD,EAAc;AACjBb,IAAAA,KAAK,CAACc,IAAN,CAAW,6BAAX,EAA0C;AACtCH,MAAAA,KAAK,EAAEA,KAD+B;AAEtCC,MAAAA,QAAQ,EAAEA;AAF4B,KAA1C,EAICG,IAJD,CAIM,UAAAC,IAAI,EAAI;AACVH,MAAAA,QAAQ,CAACZ,WAAW,CAACe,IAAI,CAACC,IAAN,CAAZ,CAAR;AACH,KAND,EAOCC,KAPD,CAOO,UAAAZ,KAAK;AAAA,aAAIO,QAAQ,CAACR,WAAW,CAACC,KAAD,CAAZ,CAAZ;AAAA,KAPZ;AAQH,GATD;AAUH,CAZM;AAcP,OAAO,IAAMa,MAAM,GAAG,SAATA,MAAS,CAACR,KAAD,EAAQS,QAAR,EAAkBR,QAAlB,EAA+B;AACjD,SAAO,UAACC,QAAD,EAAc;AACjBb,IAAAA,KAAK,CAACc,IAAN,CAAW,8BAAX,EAA2C;AACvCH,MAAAA,KAAK,EAAEA,KADgC;AAEvCS,MAAAA,QAAQ,EAAEA,QAF6B;AAGvCR,MAAAA,QAAQ,EAAEA;AAH6B,KAA3C,EAKCG,IALD,CAKM,UAAAC,IAAI,EAAI;AACVH,MAAAA,QAAQ,CAACZ,WAAW,CAACe,IAAI,CAACC,IAAN,CAAZ,CAAR;AACH,KAPD,EAQCC,KARD,CAQO,UAAAZ,KAAK;AAAA,aAAIO,QAAQ,CAACL,YAAY,CAACF,KAAD,CAAb,CAAZ;AAAA,KARZ;AASH,GAVD;AAWH,CAZM","sourcesContent":["import * as actionTypes from './actionType.js';\r\nimport axios from 'axios';\r\n\r\nexport const setUserInfo = (userInfo) => {\r\n    return {\r\n        type: actionTypes.SET_USER_INFO,\r\n        userInfo: userInfo\r\n    };\r\n};\r\n\r\nexport const loginFailed = (error) => {\r\n    return {\r\n        type: actionTypes.LOGIN_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const signupFailed = (error) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const login = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n        axios.post('http://localhost:3001/login', {\r\n            email: email,\r\n            password: password\r\n        })\r\n        .then(user => {\r\n            dispatch(setUserInfo(user.data));\r\n        })\r\n        .catch(error => dispatch(loginFailed(error)));\r\n    };\r\n};\r\n\r\nexport const signup = (email, nickname, password) => {\r\n    return (dispatch) => {\r\n        axios.post('http://localhost:3001/signup', {\r\n            email: email,\r\n            nickname: nickname,\r\n            password: password\r\n        })\r\n        .then(user => {\r\n            dispatch(setUserInfo(user.data));\r\n        })\r\n        .catch(error => dispatch(signupFailed(error)));\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}