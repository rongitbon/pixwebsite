{"ast":null,"code":"var _jsxFileName = \"D:\\\\udemy\\\\project\\\\pixwebsite\\\\src\\\\comp\\\\form\\\\input\\\\input.js\";\nimport React from 'react';\nimport \"./input.scss\";\n\nvar Input = function Input(props) {\n  var inputElement = null;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: \"input\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n      break;\n\n    case 'input-v1':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: \"input-v1\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea-v1':\n      inputElement = React.createElement(\"textarea\", Object.assign({\n        className: \"textarea-v1\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select-v1':\n      inputElement = React.createElement(\"select\", {\n        className: \"select-v1\",\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, props.elementConfig.options.map(function (option) {\n        return React.createElement(\"option\", {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, option.displayText);\n      }));\n      break;\n\n    case 'search-box-v1':\n      inputElement = React.createElement(\"div\", {\n        className: \"search-box-v1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        className: \"search-box-v1-input\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"search-box-v1-btn\",\n        onClick: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"\\u23EA\"));\n      break;\n\n    case 'radio-v1':\n      inputElement = props.elementConfig.options.map(function (option) {\n        return React.createElement(\"div\", {\n          className: \"radio-v1\",\n          key: option.text,\n          value: props.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"radio-v1-input\",\n          type: 'radio',\n          id: option.text,\n          name: props.elementConfig.name,\n          value: option.text,\n          onChange: props.changed,\n          checked: props.value === option.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"radio-v1-label\",\n          htmlFor: option.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"radio-v1-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), option.displayText));\n      });\n      break;\n\n    case 'radio-v2':\n      inputElement = props.elementConfig.options.map(function (option, index) {\n        return React.createElement(\"div\", {\n          className: \"radio-v2\",\n          key: option.text,\n          value: props.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          key: option.text,\n          className: \"radio-v2-input\",\n          type: 'radio',\n          id: option.text,\n          name: props.elementConfig.name,\n          checked: props.value === option.text,\n          onClick: function onClick(event) {\n            return props.changed(event, index);\n          },\n          value: props.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"radio-v2-label\",\n          htmlFor: option.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, option.displayText));\n      });\n      break;\n\n    case 'checkbox-v1':\n      inputElement = props.elementConfig.options.map(function (option, index) {\n        return React.createElement(\"div\", {\n          className: \"checkbox-v1\",\n          key: option.text,\n          value: props.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"checkbox-v1-input\",\n          type: 'checkbox',\n          id: option.text,\n          name: props.elementConfig.name,\n          checked: option.value === option.text,\n          onClick: function onClick(event) {\n            return props.changed(event, index);\n          },\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"checkbox-v1-label\",\n          htmlFor: option.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, option.displayText));\n      });\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: \"input\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, inputElement, props.label ? React.createElement(\"div\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, props.elementConfig.placeholder) : \"\");\n};\n\nexport default Input;","map":{"version":3,"sources":["D:\\udemy\\project\\pixwebsite\\src\\comp\\form\\input\\input.js"],"names":["React","Input","props","inputElement","elementType","elementConfig","value","changed","options","map","option","displayText","text","name","index","event","label","placeholder"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"./input.scss\";\r\n\r\nconst Input = (props) => {\r\n\r\n    let inputElement = null;\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                className=\"input\"\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n\r\n        case ('input-v1'):\r\n            inputElement = <input \r\n                className={\"input-v1\"}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n\r\n        case ('textarea-v1'):\r\n            inputElement = <textarea\r\n                className={\"textarea-v1\"}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n\r\n        case ('select-v1'):\r\n            inputElement =(\r\n                <select\r\n                    className={\"select-v1\"}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayText}\r\n                        </option>\r\n                    ))}\r\n                </select>);\r\n            break;\r\n\r\n        case ('search-box-v1'):\r\n            inputElement = <div className=\"search-box-v1\">\r\n                <input \r\n                    className={\"search-box-v1-input\"}\r\n                    {...props.elementConfig}\r\n                    value={props.value}\r\n                    onChange={props.changed}\r\n                    />\r\n                <p className=\"search-box-v1-btn\" onClick={value}>⏪</p>\r\n            </div>\r\n            break;\r\n\r\n        case ('radio-v1'):\r\n            inputElement = props.elementConfig.options.map(option => (\r\n                    <div \r\n                        className={\"radio-v1\"} \r\n                        key={option.text}\r\n                        value={props.value}\r\n                        >\r\n                            <input\r\n                                className={\"radio-v1-input\"}\r\n                                type={'radio'}\r\n                                id={option.text}\r\n                                name={props.elementConfig.name}\r\n                                value={option.text}\r\n                                onChange={props.changed}\r\n                                checked={props.value === option.text}\r\n                            >\r\n                            </input>\r\n                            <label\r\n                                className={\"radio-v1-label\"}\r\n                                htmlFor={option.text}\r\n                            >\r\n                                <span className={\"radio-v1-button\"}></span>\r\n                                {option.displayText}\r\n                            </label>\r\n\r\n                    </div>\r\n                ))\r\n            break;\r\n        \r\n        case ('radio-v2'):\r\n            inputElement = props.elementConfig.options.map((option ,index) => (\r\n                    <div \r\n                        className={\"radio-v2\"} \r\n                        key={option.text}\r\n                        value={props.value}\r\n                        >\r\n                            <input\r\n                                key={option.text}\r\n                                className={\"radio-v2-input\"}\r\n                                type={'radio'}\r\n                                id={option.text}\r\n                                name={props.elementConfig.name}\r\n                                checked={props.value === option.text}\r\n                                onClick={(event) => (props.changed(event, index))}\r\n                                value={props.value}\r\n                            >\r\n                            </input>\r\n                            <label\r\n                                className={\"radio-v2-label\"}\r\n                                htmlFor={option.text}\r\n                            >\r\n                                {option.displayText}\r\n                            </label>\r\n\r\n                    </div>\r\n                ))\r\n            break;\r\n        \r\n        case ('checkbox-v1'):\r\n            inputElement = props.elementConfig.options.map((option, index) => (\r\n                    <div \r\n                        className={\"checkbox-v1\"} \r\n                        key={option.text}\r\n                        value={props.value}\r\n                        >\r\n                            <input\r\n                                className={\"checkbox-v1-input\"}\r\n                                type={'checkbox'}\r\n                                id={option.text}\r\n                                name={props.elementConfig.name}\r\n                                checked={option.value === option.text}\r\n                                onClick={(event) => (props.changed(event, index))}\r\n                                value={option.value}\r\n                            >\r\n                            </input>\r\n                            <label\r\n                                className={\"checkbox-v1-label\"}\r\n                                htmlFor={option.text}\r\n                            >\r\n                                {option.displayText}\r\n                            </label>\r\n\r\n                    </div>\r\n                ))\r\n            break;\r\n        \r\n        default:\r\n            inputElement = <input \r\n                className=\"input\"\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {inputElement}\r\n            {(props.label)?(<div className=\"label\">{props.elementConfig.placeholder}</div>):\"\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}